<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 1.namespace指定映射文件所映射的接口类 -->
<mapper namespace="com.tan.Mybatis.Mappers.StudentMapper">
	<!-- 2.resultMap用来配置返回的类型值 -->
	<!-- <resultMap type="Student" id="StudentMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		#association 为一对一返回的address的值。
		<association property="address" javaType="Address">
			<result property="id" column="id"/>
			<result property="sheng" column="sheng"/>
			<result property="shi" column="shi"/>
		</association>
	</resultMap> -->
	
	
	<!-- 3.一对一查询，或者多对一时候使用select  association关联到另一个表的查询语句里面 -->
	<resultMap type="Student" id="StudentMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<association property="address" column="addressId" select="com.tan.Mybatis.Mappers.AddressMapper.findById"></association>
	</resultMap>
	
	<!-- id设置为自增时候才能用null值。一般传进去的值用#{xx}来表示参数，其中parameterType为传进去的参数，resultType为返回的值的类型。 -->
	<insert id="add" parameterType="Student" keyProperty="id">
	insert into student value(null ,#{age},#{name})
	</insert>
	
	<update id="update" parameterType="Student">
		update student set age = #{age} ,name = #{name} where id = #{id}
	</update>
	
	<delete id="delete" parameterType="Integer">
		delete from student where id = #{id}
	</delete>
	
	<select id="find" parameterType="Integer" resultType="Student">
		select * from student where id = #{id};
	</select>
	
	<select id="findAll" resultMap="StudentMap">
		select * from student;
	</select>
	
	<select id="findByAddressId" resultType="Student" parameterType="Integer">
		select * from student where addressId = #{addressId}
	</select>
	
	<!-- resultMap为返回的配置的值 -->
	<select id="findWithAddress" parameterType="Integer" resultMap="StudentMap">
		select * from student where id = #{id};
	</select>
	
</mapper>